@use "./breakpoints.scss" as breakpoints;

// @use 'styles/mixins' as mixins; - if you want to use in in components folder
// @use 'path-to-file/mixins' as mixins; - if you want to use inside styles folder
//e.g  @include animate(color border)
//e.g  @include animate(color border, 0.5s, linear)

// transition
@mixin transition {
  transition: all 0.3s ease-in-out;
}

/// Animate css properties
// usage
// scss - @include animate(color);
//     or @include animate(color width);
//     or @include animate(color width, 1s, linear);
//
$animation-speed: 0.3s !default;

@mixin animate($properties, $duration: $animation-speed, $easing: ease-in-out) {
  $list: ();
  @each $prop in $properties {
    $str: #{$prop} #{$duration} #{$easing};
    $list: join($list, #{$str}, comma);
  }
  transition: $list;
}

// @use 'styles/mixins' as mixins; - if you want to use in in components folder
// @use 'path-to-file/mixins' as mixins; - if you want to use inside styles folder

//e.g  @include mixins.hover {}
@mixin hover() {
  @media (hover: hover) and (pointer: fine) {
    &:hover {
      @content;
    }
  }
}

// @use 'styles/mixins' as mixins; - if you want to use in in components folder
// @use 'path-to-file/mixins' as mixins; - if you want to use inside styles folder
// @include mixins.media(tablet) {}

@mixin media($breakpoint, $type: "min") {
  @if $breakpoint == mobile {
    @if ($type == "max") {
      @media (max-width: breakpoints.$mobile_max) {
        @content;
      }
    } @else {
      @media (min-width: breakpoints.$mobile) {
        @content;
      }
    }
  } @else if $breakpoint == tablet {
    @if ($type == "max") {
      @media (max-width: breakpoints.$tablet_max) {
        @content;
      }
    } @else {
      @media (min-width: breakpoints.$tablet) {
        @content;
      }
    }
  } @else if $breakpoint == tablet_lg {
    @if ($type == "max") {
      @media (max-width: breakpoints.$tablet_lg_max) {
        @content;
      }
    } @else {
      @media (min-width: breakpoints.$tablet_lg) {
        @content;
      }
    }
  } @else if $breakpoint == desktop {
    @if ($type == "max") {
      @media (max-width: breakpoints.$desktop_max) {
        @content;
      }
    } @else {
      @media (min-width: breakpoints.$desktop) {
        @content;
      }
    }
  } @else if $breakpoint == desktop_md {
    @if ($type == "max") {
      @media (max-width: breakpoints.$desktop_md_max) {
        @content;
      }
    } @else {
      @media (min-width: breakpoints.$desktop_md) {
        @content;
      }
    }
  } @else if $breakpoint == desktop_lg {
    @if ($type == "max") {
      @media (max-width: breakpoints.$desktop_lg_max) {
        @content;
      }
    } @else {
      @media (min-width: breakpoints.$desktop_lg) {
        @content;
      }
    }
  } @else {
    @if ($type == "max") {
      @media (max-width: $breakpoint) {
        @content;
      }
    } @else {
      @media (min-width: $breakpoint) {
        @content;
      }
    }
  }
}

@mixin text-trim-dots() {
  overflow: hidden;
  white-space: nowrap;
  text-overflow: ellipsis;
}
